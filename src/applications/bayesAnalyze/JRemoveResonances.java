/*
 * JRemoveResonances.java
 *
 * Created on May 7, 2008, 12:52 PM
 */

package applications.bayesAnalyze;
import utilities.PanelUtility;
import java.text.NumberFormat;
import java.util.ArrayList;
import fid.*;
import javax.swing.JPanel;
import static bayes.ApplicationConstants.*;
/**
 *
 * @author  apple
 */
public class JRemoveResonances  extends JPanel {
               
              
 ArrayList <Resonance>  savedResList  = new  ArrayList <Resonance> ();
 ArrayList <Resonance> currentResList ;
 BayesAnalyze ba;
    /** Creates new form JRemoveResonances */
    public JRemoveResonances() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        to_lbl = new javax.swing.JLabel();
        to_ft = new javax.swing.JFormattedTextField();
        NumberFormat  integerFormat  = NumberFormat.getIntegerInstance ();
        from_ft = new javax.swing.JFormattedTextField(integerFormat);
        rmv_btn = new javax.swing.JButton();
        rmv_all_btn = new javax.swing.JButton();
        restore_btn = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Remove Resonances"));
        setLayout(new java.awt.GridBagLayout());

        to_lbl.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        to_lbl.setForeground(new java.awt.Color(0, 0, 102));
        to_lbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        to_lbl.setText("-");
        to_lbl.setName("to_lbl"); // NOI18N
        to_lbl.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(to_lbl, gridBagConstraints);

        to_ft.setForeground(new java.awt.Color(0, 0, 102));
        to_ft.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.###"))));
        to_ft.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        to_ft.setToolTipText("<html><p style=\"margin: 6px;\"><font size=\"4\">\nSet last resonance to remove.\n</html>\n\n\n\n"); // NOI18N
        to_ft.setName("to_ft"); // NOI18N
        to_ft.setValue(1);
        to_ft.addPropertyChangeListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(to_ft, gridBagConstraints);

        from_ft.setForeground(new java.awt.Color(0, 0, 102));
        from_ft.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        from_ft.setToolTipText("<html><p style=\"margin: 6px;\"><font size=\"4\">\n\nSet first resonance to remove.\n</html>\n\n\n\n"); // NOI18N
        from_ft.setName("from_ft"); // NOI18N
        from_ft.setValue(1);
        from_ft.addPropertyChangeListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        add(from_ft, gridBagConstraints);

        rmv_btn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        rmv_btn.setText("Remove");
        rmv_btn.setToolTipText("<html><p style=\"margin: 6px;\"><font size=\"4\">\nRemove resonances from <br>\nspecified range.\n</html>\n\n\n"); // NOI18N
        rmv_btn.setMargin(new java.awt.Insets(1, 0, 1, 0));
        rmv_btn.setName("rmv_btn"); // NOI18N
        rmv_btn.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(rmv_btn, gridBagConstraints);

        rmv_all_btn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        rmv_all_btn.setText("Remove All");
        rmv_all_btn.setToolTipText("<html><p style=\"margin: 6px;\"><font size=\"4\">\nRemove all resonances.\n</html>\n\n\n\n"); // NOI18N
        rmv_all_btn.setMargin(new java.awt.Insets(1, 0, 1, 0));
        rmv_all_btn.setName("rmv_all_btn"); // NOI18N
        rmv_all_btn.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(rmv_all_btn, gridBagConstraints);

        restore_btn.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        restore_btn.setText("Restore");
        restore_btn.setToolTipText("<html><p style=\"margin: 6px;\"><font size=\"4\">\nRestore and plot resonances <br>\nform previous analysis.\n</html>\n\n\n\n"); // NOI18N
        restore_btn.setMargin(new java.awt.Insets(1, 0, 1, 0));
        restore_btn.setName("restore_btn"); // NOI18N
        restore_btn.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(restore_btn, gridBagConstraints);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == rmv_btn) {
                JRemoveResonances.this.rmv_btnActionPerformed(evt);
            }
            else if (evt.getSource() == rmv_all_btn) {
                JRemoveResonances.this.rmv_all_btnActionPerformed(evt);
            }
            else if (evt.getSource() == restore_btn) {
                JRemoveResonances.this.restore_btnActionPerformed(evt);
            }
        }

        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            if (evt.getSource() == to_ft) {
                JRemoveResonances.this.to_fttextFieldChanged(evt);
            }
            else if (evt.getSource() == from_ft) {
                JRemoveResonances.this.from_fttextFieldChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

private void from_fttextFieldChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_from_fttextFieldChanged
    if (evt.getPropertyName().equalsIgnoreCase("value") == false ) return;
    setIndexLimits();
}//GEN-LAST:event_from_fttextFieldChanged
private void to_fttextFieldChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_to_fttextFieldChanged
    if (evt.getPropertyName().equalsIgnoreCase("value") == false ) return;
     setIndexLimits();
}//GEN-LAST:event_to_fttextFieldChanged
private void rmv_all_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmv_all_btnActionPerformed
    removeAllResonances();
}//GEN-LAST:event_rmv_all_btnActionPerformed
private void restore_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restore_btnActionPerformed
    if ( savedResList.size() < 1) {return;}
        getResonances().clear();
    
    for (Resonance resonance : savedResList) {
        getResonances().add(resonance);
    }

    firePropertyChange(ADD_OR_REOMOVE_RESONANCES ,null,true );
   
}//GEN-LAST:event_restore_btnActionPerformed
private void rmv_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmv_btnActionPerformed
    int from    = ((Number) from_ft.getValue()).intValue();
    int to      = ((Number) to_ft.getValue()).intValue();
    int max     =  getResonances().size();
    
    if (max < 1){return;}
    removeResonances(from , to);
}//GEN-LAST:event_rmv_btnActionPerformed

/********************************************
 * 
 * @param from - indexing starts from 1;
 * @param to   - indexing starts from 1
 */
 private void removeResonances(int from, int to){
    // saves resonances
    savedResList.clear();
    
     ArrayList<Resonance>  resList = this.getResonances();
     for (int i = 0; i < resList.size(); i++) {
          Resonance curRes      =  resList.get(i);
          if (curRes != null){ savedResList.add(curRes.clone());}
     }
     
     // change to zero indexing
     int max = to - 1;
     int min = from -1;
     
     // remove chosen resonance
     for (int i = max ; i >= min; i--) {
         resList.remove(i);
     }
     
     firePropertyChange(ADD_OR_REOMOVE_RESONANCES ,null,true );
 }
 private void removeAllResonances(){
    removeResonances(1,  getResonances().size() );
 }
 
 private void setIndexLimits(){
    int from    = ((Number) from_ft.getValue()).intValue();
    int to      = ((Number) to_ft.getValue()).intValue();
    int max     = this.getResonances().size();
    
    if (max  == 0 ) {
        from_ft.setValue(1);
        to_ft.setValue(1);
        return;
    }
    
    // check upper limit
    if (from >  max ){  from_ft.setValue(max);}
    if (to  >  max ){  to_ft.setValue(max);}
        
     
    // check lower limit
    if (from < 1) { from_ft.setValue(1);} 
    if (to  < 1)  { to_ft.setValue(1);} 
    
    // check agreement with "to"
    if (from > to){ to_ft.setValue(from);} 
 
 }
 public ArrayList<Resonance>  getResonances(){ return Resonance.getResonanceList();}
 public void  setResonances(ArrayList<Resonance> resonanceList){  Resonance.setResonanceList(resonanceList);}
 
 public void resetToDefaults(){
     from_ft.setValue(1);
     to_ft.setValue(1);
 
 }
 public void setActive ( boolean isActive) {
      PanelUtility.setEnabled(this, isActive);
 }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField from_ft;
    private javax.swing.JButton restore_btn;
    private javax.swing.JButton rmv_all_btn;
    private javax.swing.JButton rmv_btn;
    private javax.swing.JFormattedTextField to_ft;
    private javax.swing.JLabel to_lbl;
    // End of variables declaration//GEN-END:variables

}
