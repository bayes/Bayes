/*
 * SlidingBar.java
 *
 * Created on August 29, 2008, 7:56 PM
 */

package fid;
import java.awt.BasicStroke;
import java.awt.*;
import java.awt.geom.*;
import javax.swing.*;
/**
 *
 * @author  apple
 */
public class SlidingBar extends javax.swing.JPanel {
    int barX       =   5;
    int barY;
    int barWidth   = 20;
    int barHeight  = 7;
    Color b = new Color(25,25,25);
    GradientPaint Cyclic = new GradientPaint (160F, 20F, Color.red,
                                260F, 90F, Color.green, true);
    GradientPaint Black = new GradientPaint (0F, 0F, b,
                                0F, 50F, Color.BLACK, true);
    GradientPaint BlackEdges = new GradientPaint (0F, 0F, b,
                                0F, 0F, Color.BLACK, true);
    
    public static final String verticalPositionChange = "Bar Verticsal position has changed";
    Rectangle2D.Double  bar =  new Rectangle2D.Double();
    /** Creates new form SlidingBar */
    public SlidingBar() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormListener formListener = new FormListener();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(153, 153, 153));
        setToolTipText("Press and move mouse to modify plot baseline."); // NOI18N
        addMouseMotionListener(formListener);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 36, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 310, Short.MAX_VALUE)
        );
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.MouseMotionListener {
        FormListener() {}
        public void mouseDragged(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == SlidingBar.this) {
                SlidingBar.this.formMouseDragged(evt);
            }
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
    barY   =   evt.getY();
    boolean contains =  this.contains(evt.getPoint());
    if (contains){
        repaint();
        this.firePropertyChange( verticalPositionChange, 0, new Point(evt.getPoint()));
    }
    
}//GEN-LAST:event_formMouseDragged
@Override
public void	paintComponent(java.awt.Graphics g){ 
        super.paintComponent(g); 
        Graphics2D g2 = (Graphics2D) g.create();
        g2.setPaint(Black);
        g2.fillRect(0, 0, this.getWidth(), this.getHeight());
        //drawRectangle(g2 ,bar,barX, barY , barWidth, barHeight);
    }
public static void drawRectangle(Graphics2D g2d,  Rectangle2D.Double  bar ,int xCenter, int yCenter, int width, int height) {
   
       bar.setRect(xCenter, yCenter, width, height);
       g2d.fill(bar);
       g2d.draw(bar);
   }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
  
    private static void createAndShowGUI () {
        //Disable boldface controls.
        UIManager.put ("swing.boldMetal", Boolean.FALSE);
        
        //Create and set up the window.
        JFrame frame = new JFrame ("Exp Model");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
     
        //Create and set up the content pane.
        SlidingBar newContentPane = new SlidingBar();
        newContentPane.setOpaque (true); //content panes must be opaque
        frame.setContentPane (newContentPane);
        
        //Display the window.
        frame.pack ();
        frame.setVisible (true);
       
        
    }
    public static void main (String[] args) {
      
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater (new Runnable () {
            public void run () {
                createAndShowGUI ();
            }
        });
 
    }

}
