/*
 * JPasswordDialog.java
 *
 * Created on August 13, 2007, 11:08 AM
 */

package interfacebeans;



public class JPasswordDialog extends javax.swing.JDialog implements java.io.Serializable, bayes.ApplicationConstants {
     public static final int OK            =   1;
     public static final int CANCEL        =   -1;
    /** Creates new form JPasswordDialog */
    public JPasswordDialog (javax.swing.JFrame  parent, boolean modal) {
        super (parent, modal);
        password  =    null;
        initComponents ();

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        cancel_button = new javax.swing.JButton();
        ok_button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        serverLabel = new javax.swing.JLabel();
        servertetxFiled = new javax.swing.JTextField();
        userLabel = new javax.swing.JLabel();
        usertetxFiled = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Verify Credentials"); // NOI18N
        setBounds(new java.awt.Rectangle(0, 0, 300, 180));
        setMinimumSize(new java.awt.Dimension(300, 160));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(5, 0));

        cancel_button.setText("Cancel");
        cancel_button.setFocusTraversalPolicyProvider(true);
        cancel_button.setNextFocusableComponent(ok_button);
        cancel_button.setRequestFocusEnabled(false);
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton_actionPerformed(evt);
            }
        });

        ok_button.setText("OK");
        ok_button.setFocusTraversalPolicyProvider(true);
        ok_button.setMaximumSize(new java.awt.Dimension(120, 200));
        ok_button.setMinimumSize(new java.awt.Dimension(80, 50));
        ok_button.setNextFocusableComponent(passwordField);
        ok_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton_actionPerformed(evt);
            }
        });
        ok_button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ok_buttonKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .add(cancel_button)
                .add(ok_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2Layout.linkSize(new java.awt.Component[] {cancel_button, ok_button}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(cancel_button)
            .add(ok_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(204, 204, 204), null, null));
        jPanel1.setEnabled(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        serverLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        serverLabel.setText("Server");
        serverLabel.setAlignmentX(0.5F);
        serverLabel.setFocusable(false);
        serverLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 4);
        jPanel1.add(serverLabel, gridBagConstraints);

        servertetxFiled.setBackground(new java.awt.Color(204, 204, 204));
        servertetxFiled.setEditable(false);
        servertetxFiled.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        servertetxFiled.setFocusable(false);
        servertetxFiled.setMargin(new java.awt.Insets(0, 5, 0, 0));
        servertetxFiled.setPreferredSize(new java.awt.Dimension(80, 25));
        servertetxFiled.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 3);
        jPanel1.add(servertetxFiled, gridBagConstraints);

        userLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        userLabel.setText("User");
        userLabel.setAlignmentX(0.5F);
        userLabel.setFocusable(false);
        userLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 4);
        jPanel1.add(userLabel, gridBagConstraints);

        usertetxFiled.setBackground(new java.awt.Color(204, 204, 204));
        usertetxFiled.setEditable(false);
        usertetxFiled.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        usertetxFiled.setFocusable(false);
        usertetxFiled.setMargin(new java.awt.Insets(0, 5, 0, 0));
        usertetxFiled.setPreferredSize(new java.awt.Dimension(80, 25));
        usertetxFiled.setRequestFocusEnabled(false);
        usertetxFiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usertetxFiledActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 3);
        jPanel1.add(usertetxFiled, gridBagConstraints);

        label.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label.setText("Password");
        label.setFocusable(false);
        label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        label.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 4);
        jPanel1.add(label, gridBagConstraints);

        passwordField.setColumns(15);
        passwordField.setText("jPasswordField1");
        passwordField.setFocusCycleRoot(true);
        passwordField.setFocusTraversalPolicyProvider(true);
        passwordField.setNextFocusableComponent(ok_button);
        passwordField.setOpaque(true);
        passwordField.setPreferredSize(new java.awt.Dimension(80, 25));
        passwordField.requestFocusInWindow();

        passwordField.setText(this.getPassword());
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 3);
        jPanel1.add(passwordField, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ok_buttonKeyReleased (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ok_buttonKeyReleased
        if ( evt.getKeyChar() == java.awt.event.KeyEvent.VK_ENTER){
             update(true) ;
       }
    }//GEN-LAST:event_ok_buttonKeyReleased
    private void passwordFieldKeyReleased (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        if ( evt.getKeyChar() == java.awt.event.KeyEvent.VK_ENTER){
             update(true) ;
       }
    }//GEN-LAST:event_passwordFieldKeyReleased
    private void okButton_actionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton_actionPerformed
       update(true); 
    }//GEN-LAST:event_okButton_actionPerformed
    private void cancelButton_actionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton_actionPerformed
        update(false);
    }//GEN-LAST:event_cancelButton_actionPerformed
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         setOption(CANCEL);
    }//GEN-LAST:event_formWindowClosing

    private void usertetxFiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usertetxFiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usertetxFiledActionPerformed
    public  void reset(){
        setPassword(null);
        getPasswordField().setText(null);
    }
    public  void resetIfNewServer(String aserver){
       String curServer     = getServer();
       if (  curServer == null || curServer.equalsIgnoreCase(aserver) == false){
             reset();
       }
    }

    public  boolean isPasswordNeedToBeSet(){
        boolean isPasswordNeedToBeSet   = true;
        if ( getPassword () != null &&  getPassword ().length() > 1 ){
            isPasswordNeedToBeSet = false;
        }
        return isPasswordNeedToBeSet;
    }

    private void update(boolean bool){
        if (bool){
            String apassword    =   new String (getPasswordField().getPassword());
            setPassword( apassword );
            setOption(OK);
           
        } else{
            setPassword( null );
            getPasswordField ().setText("");
            setOption(CANCEL);
        }

        setVisible(false);
        dispose();
    }


    public static void main (String args[]) {
        java.awt.EventQueue.invokeLater (new Runnable () {
            public void run () {
                new JPasswordDialog (new javax.swing.JFrame (), true).setVisible (true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label;
    private javax.swing.JButton ok_button;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel serverLabel;
    private javax.swing.JTextField servertetxFiled;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField usertetxFiled;
    // End of variables declaration//GEN-END:variables
    public javax.swing.JPasswordField getPasswordField () {
        return passwordField;
    }
    
    private String password;
    protected int option = OK;


    public void setUser(String user){
        usertetxFiled.setText(user);
    }
    public void setServer(String server){
        servertetxFiled.setText(server);
    }
    public void setFocus(){
        getPasswordField ().requestFocusInWindow();
        
    }

    public String getServer(){
        if (servertetxFiled != null){
            return servertetxFiled.getText();
        }
        else{
            return null;
        }
    }
    public String getUserName(){
        if (usertetxFiled != null){
            return usertetxFiled.getText();
        }
        else{
            return null;
        }
    }

/******************** getters and setters ****************************/
    public String   getPassword () {return password;}
    public int      getOption () {
        return option;
    }
    
    public void     setPassword ( String pswd) {
        password = pswd;
    }
    public void     setOption ( int option ) {
        this.option = option;
    }

   
}
