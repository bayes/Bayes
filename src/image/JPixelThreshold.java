/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPixelThreshold.java
 *
 * Created on Aug 13, 2010, 3:28:04 PM
 */

package image;

import java.awt.Dimension;
import utilities.DisplayText;

/**
 *
 * @author apple
 */
public final class JPixelThreshold extends javax.swing.JDialog {
   private Float lowerThreshold             =   Float.NEGATIVE_INFINITY;
   private Float upperThreshold             =   Float.POSITIVE_INFINITY;
   private boolean proceed                  =   false;
    private static JPixelThreshold instance = null;
    private static  JPixelThreshold getInstance( ) {
      if(instance == null) {
         instance = new  JPixelThreshold(null, true);

      }

      return instance;
   }
    /** Creates new form JPixelThreshold */
    private JPixelThreshold(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        reset();
    }


    public static  JPixelThreshold showDialog( ){
       java.awt.Point loc = java.awt.MouseInfo.getPointerInfo().getLocation();
       return showDialog(loc.x, loc.y);
    }
    public static  JPixelThreshold showDialog(int x, int y ){
        Dimension dim   =  getInstance( ).getSize();
        getInstance( ).setLocation(new java.awt.Point(x -dim.width/2,y - dim.height/2));
        getInstance().setProceed(false);
        getInstance( ).setVisible(true);
        return instance;
    }
    public static JPixelThreshold  hideDialog( ){

        getInstance( ).setVisible(false);

       return instance;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lowerThresholdFT = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        upperThresholdFT = new javax.swing.JFormattedTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Set Image Statistics Thresholds"); // NOI18N
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText("Lower Threshold");
        jLabel1.setName("jLabel1"); // NOI18N

        lowerThresholdFT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0###########"))));
        lowerThresholdFT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lowerThresholdFT.setName("lowerThresholdFT"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lowerThreshold}"), lowerThresholdFT, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel2.setText("Upper Threshold");
        jLabel2.setName("jLabel2"); // NOI18N

        upperThresholdFT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0###########"))));
        upperThresholdFT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        upperThresholdFT.setName("upperThresholdFT"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${upperThreshold}"), upperThresholdFT, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel1)
                    .add(jLabel2))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(lowerThresholdFT)
                    .add(upperThresholdFT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lowerThresholdFT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(upperThresholdFT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {jLabel1, jLabel2, lowerThresholdFT, upperThresholdFT}, org.jdesktop.layout.GroupLayout.VERTICAL);

        okButton.setText("OK");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setName("resetButton"); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(resetButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(okButton))
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 283, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(cancelButton)
                    .add(resetButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
       boolean shouldprocced = isConsistentValues();
       setProceed(shouldprocced);
       hideDialog();
}//GEN-LAST:event_okButtonActionPerformed
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setProceed(false);
        hideDialog( );
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
       reset();
    }//GEN-LAST:event_resetButtonActionPerformed

    public void reset(){
        lowerThresholdFT.setValue(Float.NEGATIVE_INFINITY);
        upperThresholdFT.setValue(Float.POSITIVE_INFINITY);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JPixelThreshold dialog =  showDialog( );
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                    }
                });
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField lowerThresholdFT;
    private javax.swing.JButton okButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JFormattedTextField upperThresholdFT;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public Float getLowerThreshold() {
        return lowerThreshold;
    }
    public void setLowerThreshold(Float lowerThreshold) {
        this.lowerThreshold = lowerThreshold;
    }
    public Float getUpperThreshold() {
        return upperThreshold;
    }
    public void setUpperThreshold(Float upperThreshold) {
        this.upperThreshold = upperThreshold;
    }
    public StringBuilder getInfo(){
        StringBuilder sb   = new StringBuilder();
        sb.append("Lower Threshold  = "+ this.getLowerThreshold());
        sb.append("\n");
        sb.append("Upper Threshold  = "+ this.getUpperThreshold());
        sb.append("\n");

        return sb;
    }
    private boolean isConsistentValues(){
        if ( getLowerThreshold() >=getUpperThreshold()){
            String error = String.format(
                   "Ilegal thresholds assignment:"+
                   "Lower threshold %f exceeds \n"+
                   "upper threshold %s.\n"+
                   "Exiting...",  getLowerThreshold(), getUpperThreshold());
            DisplayText.popupErrorMessage(error);
            return false;
        }
        else{
            return true;
        }
    }

    public boolean isProceed() {
        return proceed;
    }
    public void setProceed(boolean proceed) {
        this.proceed = proceed;
    }
}
