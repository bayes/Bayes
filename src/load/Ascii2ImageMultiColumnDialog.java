/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ascii2ImageMultiColumnDialog.java
 *
 * Created on Apr 21, 2009, 12:48:14 PM
 */

package load;
import java.awt.*;
import bayes.BayesManager;
import utilities.DisplayText;


/**
 *
 * @author apple
 */
public class Ascii2ImageMultiColumnDialog extends javax.swing.JDialog {
   private static   Ascii2ImageMultiColumnDialog instance               =   null;
    private  Ascii2ImageConverter converter                             =   Ascii2ImageConverter.getInstance();
    private boolean canceled                                            =   false;
    private boolean ignoreEvents                                                =    false;

    /** Creates new form Ascii2ImageMultiColumnDialog */
    private Ascii2ImageMultiColumnDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private static   Ascii2ImageMultiColumnDialog  getInstance( ) {
      if(instance == null) {
         instance = new Ascii2ImageMultiColumnDialog (null, true);
      }

      return instance;
   }
    public static    Ascii2ImageMultiColumnDialog  showDialog( Ascii2ImageConverter aconverter  ){
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
       int x                =    screenSize.width/2- 200;
       int y                =    screenSize.height/2- 200;

       return showDialog( aconverter, x,y);

    }
    public static    Ascii2ImageMultiColumnDialog  showDialog( Ascii2ImageConverter aconverter,int x, int y ){
        //update settings
         getInstance( ).setConverter(aconverter);

         // be default values are not active unless "set" button is pressed
         getInstance().setCanceled(true);

         getInstance( ).setIgnoreEvents(true);

         getInstance( ). getDim1TextField ().setValue(aconverter.getDescriptor().getNumberOfPhaseEncodes());
         getInstance( ). getDim2TextField ().setValue(aconverter.getDescriptor().getNumberOfReadouts());
         getInstance( ). getDim3TextField ().setValue(aconverter.getDescriptor().getNumberOfSlices());
         getInstance( ). getDim4TextField ().setValue(aconverter.getDescriptor().getNumberOfElements());

         getInstance( ).getDim1scaleTextField().setValue(1);
         getInstance( ).getDim2scaleTextField().setValue(1);
         getInstance( ).getDim3scaleTextField().setValue(1);


         int pixelInFile = aconverter.getNumberOfLinesInFile()*aconverter.getDescriptor().getNumberOfPhaseEncodes();
         getInstance( ). getLinesInFileTextField ().setValue(pixelInFile);

         getInstance( ).setIgnoreEvents(false);
         getInstance( ).recalculate();


         // show Preferences
        getInstance( ).setLocation(new java.awt.Point(x,y));
        getInstance( ).setVisible(true);

       return instance;
    }
    public           Ascii2ImageMultiColumnDialog  hideDialog( ){
        setVisible(false);

       return instance;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parsingOrderButtonGroup = new javax.swing.ButtonGroup();
        fileStructurePanel = new javax.swing.JPanel();
        loopSlicesFirstRadioButton = new javax.swing.JRadioButton();
        loppElementsFirstRadioButton = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dim1TextField = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        dim2TextField = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        dim3TextField = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        dim4TextField = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        dim1scaleTextField = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        dim2scaleTextField = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        dim3scaleTextField = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        totalPointsTextField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        linesInFileTextField2 = new javax.swing.JFormattedTextField();
        cancelButton = new javax.swing.JButton();
        setButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Image Parameters"); // NOI18N
        setResizable(false);

        fileStructurePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, null), "Text File Parsing Parameters"));
        fileStructurePanel.setName("fileStructurePanel"); // NOI18N

        parsingOrderButtonGroup.add(loopSlicesFirstRadioButton);
        loopSlicesFirstRadioButton.setText("The most outer loop corresponds to slice dimenion");
        loopSlicesFirstRadioButton.setToolTipText("<html>The most outer loop corresponds to slice dimension<br>\nNext loop corresponds to element dimension.<br>\nNext loop corresponds to phase-encode dimension.<br>\nLast loop corresponds to readout dimension.\n</html>"); // NOI18N
        loopSlicesFirstRadioButton.setName("loopSlicesFirstRadioButton"); // NOI18N
        loopSlicesFirstRadioButton.addActionListener(formListener);

        parsingOrderButtonGroup.add(loppElementsFirstRadioButton);
        loppElementsFirstRadioButton.setSelected(true);
        loppElementsFirstRadioButton.setText("The most outer loop corresponds to element dimension");
        loppElementsFirstRadioButton.setToolTipText("<html>The most outer loop corresponds to element dimension<br>\nNext loop corresponds to slice dimension.<br>\nNext loop corresponds to phase-encode dimension.<br>\nLast loop corresponds to readout dimension.\n</html>"); // NOI18N
        loppElementsFirstRadioButton.setName("loppElementsFirstRadioButton"); // NOI18N
        loppElementsFirstRadioButton.addActionListener(formListener);

        org.jdesktop.layout.GroupLayout fileStructurePanelLayout = new org.jdesktop.layout.GroupLayout(fileStructurePanel);
        fileStructurePanel.setLayout(fileStructurePanelLayout);
        fileStructurePanelLayout.setHorizontalGroup(
            fileStructurePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(fileStructurePanelLayout.createSequentialGroup()
                .add(fileStructurePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(loopSlicesFirstRadioButton)
                    .add(fileStructurePanelLayout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(loppElementsFirstRadioButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fileStructurePanelLayout.setVerticalGroup(
            fileStructurePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(fileStructurePanelLayout.createSequentialGroup()
                .add(loppElementsFirstRadioButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(loopSlicesFirstRadioButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Image Parameters"));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout(9, 2, 8, 10));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Width (pixels)");
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);

        dim1TextField.setEditable(false);
        dim1TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        dim1TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim1TextField.setToolTipText("Number of data points along phase-encode direction."); // NOI18N
        dim1TextField.setInputVerifier(new utilities.PositiveIntegerInputVerifier());
        dim1TextField.setName("dim1TextField"); // NOI18N
        dim1TextField.setValue(new Integer(1));
        dim1TextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim1TextField);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Height (pixels )");
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2);

        dim2TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        dim2TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim2TextField.setToolTipText("Number of data points along readout direction."); // NOI18N
        dim2TextField.setInputVerifier(new utilities.PositiveIntegerInputVerifier());
        dim2TextField.setName("dim2TextField"); // NOI18N
        dim2TextField.setValue(new Integer(1));
        dim2TextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim2TextField);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Number of slices");
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3);

        dim3TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        dim3TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim3TextField.setToolTipText("Number of slices."); // NOI18N
        dim3TextField.setInputVerifier(new utilities.PositiveIntegerInputVerifier());
        dim3TextField.setName("dim3TextField"); // NOI18N
        dim3TextField.setValue(new Integer(1));
        dim3TextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim3TextField);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Number of elements");
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);

        dim4TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        dim4TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim4TextField.setToolTipText("Number of elements."); // NOI18N
        dim4TextField.setInputVerifier(new utilities.PositiveIntegerInputVerifier());
        dim4TextField.setName("dim4TextField"); // NOI18N
        dim4TextField.setValue(new Integer(1));
        dim4TextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim4TextField);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Width (cm )");
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel1.add(jLabel11);

        dim1scaleTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0###############"))));
        dim1scaleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim1scaleTextField.setToolTipText("Width in centimeters along phase-encode direction."); // NOI18N
        dim1scaleTextField.setInputVerifier(new utilities.PositiveFloatInputVerifier());
        dim1scaleTextField.setName("dim1scaleTextField"); // NOI18N
        dim1scaleTextField.setValue(new Integer(1));
        dim1scaleTextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim1scaleTextField);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Height(cm)");
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel1.add(jLabel10);

        dim2scaleTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0###############"))));
        dim2scaleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim2scaleTextField.setToolTipText("Width in centimeters along readout direction."); // NOI18N
        dim2scaleTextField.setInputVerifier(new utilities.PositiveFloatInputVerifier());
        dim2scaleTextField.setName("dim2scaleTextField"); // NOI18N
        dim2scaleTextField.setValue(new Integer(1));
        dim2scaleTextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim2scaleTextField);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Slice size (cm)");
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel1.add(jLabel12);

        dim3scaleTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0###############"))));
        dim3scaleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dim3scaleTextField.setToolTipText("Width in centimeters for slices."); // NOI18N
        dim3scaleTextField.setInputVerifier(new utilities.PositiveFloatInputVerifier());
        dim3scaleTextField.setName("dim3scaleTextField"); // NOI18N
        dim3scaleTextField.setValue(new Integer(1));
        dim3scaleTextField.addPropertyChangeListener(formListener);
        jPanel1.add(dim3scaleTextField);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Estimated number of pixels");
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5);

        totalPointsTextField.setEditable(false);
        totalPointsTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0"))));
        totalPointsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totalPointsTextField.setToolTipText("<html>Total number of  pixels in the image.<br>\nThis number is equal to<br>\nwidth * height *number of slices * number of elements.\n</html>"); // NOI18N
        totalPointsTextField.setName("totalPointsTextField"); // NOI18N
        totalPointsTextField.addActionListener(formListener);
        jPanel1.add(totalPointsTextField);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Number of pixels in the file");
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel1.add(jLabel6);

        linesInFileTextField2.setEditable(false);
        linesInFileTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0"))));
        linesInFileTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        linesInFileTextField2.setToolTipText("<html>Number of data pixels in the ascii image file.<br>\nThis number is equal to<br>\nnumber of rows * number of columns in the data file.\n</html>"); // NOI18N
        linesInFileTextField2.setName("linesInFileTextField2"); // NOI18N
        jPanel1.add(linesInFileTextField2);

        cancelButton.setText("CANCEL");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.setOpaque(true);
        cancelButton.addActionListener(formListener);

        setButton.setText("SET");
        setButton.setName("setButton"); // NOI18N
        setButton.setOpaque(true);
        setButton.addActionListener(formListener);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, fileStructurePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(setButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 402, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20))
        );

        layout.linkSize(new java.awt.Component[] {fileStructurePanel, jPanel1}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 321, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(fileStructurePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(setButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == loopSlicesFirstRadioButton) {
                Ascii2ImageMultiColumnDialog.this.loopSlicesFirstRadioButtonActionPerformed(evt);
            }
            else if (evt.getSource() == loppElementsFirstRadioButton) {
                Ascii2ImageMultiColumnDialog.this.loppElementsFirstRadioButtonActionPerformed(evt);
            }
            else if (evt.getSource() == totalPointsTextField) {
                Ascii2ImageMultiColumnDialog.this.totalPointsTextFieldActionPerformed(evt);
            }
            else if (evt.getSource() == cancelButton) {
                Ascii2ImageMultiColumnDialog.this.cancelButtonActionPerformed(evt);
            }
            else if (evt.getSource() == setButton) {
                Ascii2ImageMultiColumnDialog.this.setButtonActionPerformed(evt);
            }
        }

        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            if (evt.getSource() == dim1TextField) {
                Ascii2ImageMultiColumnDialog.this.dim1TextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim2TextField) {
                Ascii2ImageMultiColumnDialog.this.dim2TextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim3TextField) {
                Ascii2ImageMultiColumnDialog.this.dim3TextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim4TextField) {
                Ascii2ImageMultiColumnDialog.this.dim4TextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim1scaleTextField) {
                Ascii2ImageMultiColumnDialog.this.dim1scaleTextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim2scaleTextField) {
                Ascii2ImageMultiColumnDialog.this.dim2scaleTextFieldpointsChangedPropertyEven(evt);
            }
            else if (evt.getSource() == dim3scaleTextField) {
                Ascii2ImageMultiColumnDialog.this.dim3scaleTextFieldpointsChangedPropertyEven(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void loopSlicesFirstRadioButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopSlicesFirstRadioButtonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_loopSlicesFirstRadioButtonActionPerformed
    private void loppElementsFirstRadioButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loppElementsFirstRadioButtonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_loppElementsFirstRadioButtonActionPerformed
    private void dim1TextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim1TextFieldpointsChangedPropertyEven
        if( isIgnoreEvents ()) {return;}
        if(evt.getPropertyName ().equalsIgnoreCase ("value")){
            recalculate ();
        }
}//GEN-LAST:event_dim1TextFieldpointsChangedPropertyEven
    private void dim1scaleTextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim1scaleTextFieldpointsChangedPropertyEven
         if( isIgnoreEvents ()) {return;}
}//GEN-LAST:event_dim1scaleTextFieldpointsChangedPropertyEven
    private void dim2TextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim2TextFieldpointsChangedPropertyEven
        if( isIgnoreEvents ()) {return;}
        if(evt.getPropertyName ().equalsIgnoreCase ("value")){
            recalculate ();
        }
}//GEN-LAST:event_dim2TextFieldpointsChangedPropertyEven
    private void dim2scaleTextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim2scaleTextFieldpointsChangedPropertyEven
         if( isIgnoreEvents ()) {return;}
}//GEN-LAST:event_dim2scaleTextFieldpointsChangedPropertyEven
    private void dim3TextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim3TextFieldpointsChangedPropertyEven
         if( isIgnoreEvents ()) {return;}
        if(evt.getPropertyName ().equalsIgnoreCase ("value")){
            recalculate ();
        }
}//GEN-LAST:event_dim3TextFieldpointsChangedPropertyEven
    private void dim3scaleTextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim3scaleTextFieldpointsChangedPropertyEven
         if( isIgnoreEvents ()) {return;}
}//GEN-LAST:event_dim3scaleTextFieldpointsChangedPropertyEven
    private void dim4TextFieldpointsChangedPropertyEven (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dim4TextFieldpointsChangedPropertyEven
         if( isIgnoreEvents ()) {return;}
        if(evt.getPropertyName ().equalsIgnoreCase ("value")){
            recalculate ();
        }
}//GEN-LAST:event_dim4TextFieldpointsChangedPropertyEven
    private void cancelButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        hideDialog ( );
}//GEN-LAST:event_cancelButtonActionPerformed
    private void setButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonActionPerformed
        int val             =   0;
        float fval          =   0;
        setCanceled (true);

        // check for validity
        boolean isValid = recalculate();
        if (isValid == false) {
            DisplayText.popupDialog("Image dimensions specfieid by user\n" +
                                    "are different from image text file dimensions\n" +
                                    "Exiting.");
            return;
        }

        // dimension1
        val             = ((Number)getDim1TextField ().getValue ()).intValue ();
        getConverter ().getDescriptor ( ).setNumberOfColumns (val);

        fval             = ((Number)getDim1scaleTextField ().getValue ()).floatValue ();
        getConverter ().getDescriptor ( ).setScaling1 (10*fval/ val );



        // dimension 2
        val             = ((Number)getDim2TextField ().getValue ()).intValue ();
        getConverter ().getDescriptor ( ).setNumberOfRows (val);

        fval             = ((Number)getDim2scaleTextField ().getValue ()).floatValue ();
        getConverter ().getDescriptor ( ).setScaling2 (10*fval/ val);


        // dimension3
        val             = ((Number)getDim3TextField ().getValue ()).intValue ();
        getConverter ().getDescriptor ( ).setNumberOfSlices (val);


        fval             = ((Number)getDim3scaleTextField ().getValue ()).floatValue ();
        getConverter ().getDescriptor ( ).setScaling3 (10*fval/ val);



        // dimension 4
        val             = ((Number)getDim4TextField ().getValue ()).intValue ();
        getConverter ().getDescriptor ( ).setNumberOfElements (val);



        boolean slicesFirst =      getLoopSlicesFirstRadioButton ().isSelected ();
        getConverter ().setSclicesFirst (slicesFirst);

        setCanceled (false);
        hideDialog ( );
}//GEN-LAST:event_setButtonActionPerformed
    private void totalPointsTextFieldActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPointsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPointsTextFieldActionPerformed



     private boolean recalculate(){
         int dim1             = ((Number)getDim1TextField().getValue()).intValue();
         int dim2             = ((Number)getDim2TextField().getValue()).intValue();
         int dim3             = ((Number)getDim3TextField().getValue()).intValue();
         int dim4             = ((Number)getDim4TextField().getValue()).intValue();

         int total            = dim1*dim2*dim3*dim4;
         getTotalPointsTextField ().setValue(total) ;

         Number number        =  (Number)getLinesInFileTextField ().getValue();
         int pixelInFile      =  number.intValue();


         getTotalPointsTextField ().setForeground(java.awt.Color.BLACK);
         if ( pixelInFile  !=total){
                getTotalPointsTextField ().setForeground(java.awt.Color.RED);
                  return false;
         }

         return true;

    }

     /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ascii2ImageMultiColumnDialog dialog = new Ascii2ImageMultiColumnDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JFormattedTextField dim1TextField;
    private javax.swing.JFormattedTextField dim1scaleTextField;
    private javax.swing.JFormattedTextField dim2TextField;
    private javax.swing.JFormattedTextField dim2scaleTextField;
    private javax.swing.JFormattedTextField dim3TextField;
    private javax.swing.JFormattedTextField dim3scaleTextField;
    private javax.swing.JFormattedTextField dim4TextField;
    private javax.swing.JPanel fileStructurePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField linesInFileTextField2;
    private javax.swing.JRadioButton loopSlicesFirstRadioButton;
    private javax.swing.JRadioButton loppElementsFirstRadioButton;
    private javax.swing.ButtonGroup parsingOrderButtonGroup;
    private javax.swing.JButton setButton;
    private javax.swing.JFormattedTextField totalPointsTextField;
    // End of variables declaration//GEN-END:variables
   public javax.swing.JFormattedTextField getDim2TextField () {
        return dim2TextField;
    }
    public javax.swing.JFormattedTextField getDim3TextField () {
        return dim3TextField;
    }
    public javax.swing.JFormattedTextField getDim4TextField () {
        return dim4TextField;
    }
    public javax.swing.JFormattedTextField getDim1TextField () {
        return dim1TextField;
    }
    public javax.swing.JFormattedTextField getLinesInFileTextField () {
        return linesInFileTextField2;
    }
  
    public javax.swing.JFormattedTextField getDim1scaleTextField () {
        return dim1scaleTextField;
    }
    public javax.swing.JFormattedTextField getDim2scaleTextField () {
        return dim2scaleTextField;
    }
    public javax.swing.JFormattedTextField getDim3scaleTextField () {
        return dim3scaleTextField;
    }
    public javax.swing.JRadioButton        getLoopSlicesFirstRadioButton () {
        return loopSlicesFirstRadioButton;
    }
    public javax.swing.JRadioButton        getLoppElementsFirstRadioButton () {
        return loppElementsFirstRadioButton;
    }
    public javax.swing.JFormattedTextField getTotalPointsTextField () {
        return totalPointsTextField;
    }






    public Ascii2ImageConverter getConverter () {
        return converter;
    }
    public void setConverter ( Ascii2ImageConverter converter ) {
        this.converter = converter;
    }

    public boolean isCanceled () {
        return canceled;
    }
    public void setCanceled ( boolean canceled ) {
        this.canceled = canceled;
    }

    public static boolean isDialogCanceled () {
        return getInstance().isCanceled();
    }

    public boolean isIgnoreEvents () {
        return ignoreEvents;
    }
    public void setIgnoreEvents ( boolean ignoreEvents ) {
        this.ignoreEvents = ignoreEvents;
    }

    /**
     * @return the totalPointsTextField
     */
 
}
