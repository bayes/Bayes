package load.gui;
import fid.FidViewer;
import java.awt.MouseInfo;
import interfacebeans.AllViewers;
/**
/**
 *
 * @author apple
 */
public class JPickPeak extends javax.swing.JDialog {

    private static  JPickPeak instance ;
    public  static  JPickPeak getInstance(){
        if (instance == null){
            instance =  new JPickPeak(null, false);
        }
        return instance;

    };
    private JPickPeak( java.awt.Frame parent,boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        getPeakText_ScrollPane = new javax.swing.JScrollPane();
        getPeak_TextPane = new javax.swing.JTextPane();
        close_btn = new javax.swing.JButton();
        extractPeak = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pick-Peak Loader"); // NOI18N
        setAlwaysOnTop(true);

        getPeakText_ScrollPane.setName("getPeakText_ScrollPane"); // NOI18N

        getPeak_TextPane.setBackground(new java.awt.Color(221, 219, 219));
        getPeak_TextPane.setEditable(false);
        getPeak_TextPane.setFont(new java.awt.Font("Lucida Grande", 1, 20));
        getPeak_TextPane.setText("To load a single peak, place a single cursor on the peak you wish to load and hit the extract button.\n\nFor Magnetization transfer or any package requiring two data columns, place a double cursor on the two peaks that are to be loaded and hit the extract button."); // NOI18N
        getPeak_TextPane.setMargin(new java.awt.Insets(10, 10, 10, 10));
        getPeak_TextPane.setName("getPeak_TextPane"); // NOI18N
        getPeakText_ScrollPane.setViewportView(getPeak_TextPane);

        close_btn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        close_btn.setText("Close");
        close_btn.setName("close_btn"); // NOI18N
        close_btn.addActionListener(formListener);

        extractPeak.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        extractPeak.setText("Extract Peak");
        extractPeak.setName("extractPeak"); // NOI18N
        extractPeak.addActionListener(formListener);

        jLabel1.setFont(new java.awt.Font("Academy Engraved LET", 0, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Instructions for Loading Pick-Peak Data");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel1.setName("jLabel1"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(close_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(extractPeak)
                        .add(6, 6, 6))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, getPeakText_ScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 563, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(11, 11, 11)
                .add(getPeakText_ScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(close_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(extractPeak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == close_btn) {
                JPickPeak.this.close_btnActionPerformed(evt);
            }
            else if (evt.getSource() == extractPeak) {
                JPickPeak.this.extractPeakActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    public static JPickPeak showDialog(){
        AllViewers.showFidViewer();
        JPickPeak.getInstance().setLocation(MouseInfo.getPointerInfo().getLocation());
        instance.setVisible(true);
        return instance;
    }


    private void close_btnActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_btnActionPerformed
        close ();
}//GEN-LAST:event_close_btnActionPerformed

    private void extractPeakActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractPeakActionPerformed
        FidViewer.getInstance ().getPeak ();
        close ();
}//GEN-LAST:event_extractPeakActionPerformed

    private static void close(){
        instance.setVisible(false);
        instance.dispose();
        instance = null;
    }
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JPickPeak dialog = new JPickPeak(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close_btn;
    private javax.swing.JButton extractPeak;
    private javax.swing.JScrollPane getPeakText_ScrollPane;
    private javax.swing.JTextPane getPeak_TextPane;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
